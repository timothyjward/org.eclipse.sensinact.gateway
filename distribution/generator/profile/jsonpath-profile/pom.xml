<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2020 Kentyou.
  ~ All rights reserved. This program and the accompanying materials
  ~ are made available under the terms of the Eclipse Public License v1.0
  ~ which accompanies this distribution, and is available at
  ~ http://www.eclipse.org/legal/epl-v10.html
  ~
  ~ Contributors:
*    Kentyou - initial API and implementation
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.eclipse.sensinact.gateway.distribution</groupId>
        <artifactId>profile</artifactId>
        <version>2.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
	</parent>

    <artifactId>json-path</artifactId>
    <packaging>pom</packaging>

    <name>sensiNact IoT Gateway - sensiNact Runtime (${project.artifactId} bridge dependencies)</name>

    <dependencies>
		<dependency>
		    <groupId>org.eclipse.sensinact.gateway.nthbnd</groupId>
		    <artifactId>jsonpath-filter</artifactId>
		</dependency> 
    </dependencies>

    <scm>
        <connection>scm:git:https://github.com/cmunilla/JPath.git</connection>
    </scm>
    
    <build>
        <plugins>        	
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-scm-plugin</artifactId>
                <executions>
                    <execution>
                    	<id>checkout-jpath</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>checkout</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <checkoutDirectory>${project.build.directory}/JsonPath</checkoutDirectory>
                    <connectionType>connection</connectionType>
                    <excludes>
                        .git,
                        json-provider-gson,
                        json-provider-jsonsmart,
                        json-provider-tapestry,
                        json-provider-jettison,
                        json-provider-jackson,
                        jpath-web-test,
                        jpath-assert
                    </excludes>
                </configuration>
            </plugin> 
            <plugin>
                <groupId>org.fortasoft</groupId>
                <artifactId>gradle-maven-plugin</artifactId>
                <configuration>
                    <tasks>
                        <task>:jpath:compileJava</task>
                        <task>:jpath:assemble</task>
                        <task>:json-provider-jsonorg:compileJava</task>
                        <task>:json-provider-jsonorg:assemble</task>
                    </tasks>
                    <gradleProjectDirectory>${project.build.directory}/JsonPath</gradleProjectDirectory>
                </configuration>
                <executions>
                    <execution>
                    	<id>jpath-build-libs</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>invoke</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
<!--              <plugin> -->
<!-- 	          <groupId>org.codehaus.gmaven</groupId> -->
<!-- 	          <artifactId>groovy-maven-plugin</artifactId> -->
<!-- 	          <executions> -->
<!-- 	            <execution> -->
<!-- 	              <id>copy-dependency</id> -->
<!--                   <phase>validate</phase> -->
<!-- 	              <goals> -->
<!-- 	                <goal>execute</goal> -->
<!-- 	              </goals> -->
<!-- 	              <configuration> -->
<!-- 	                <source> -->
<!-- 		                String basedir = project.basedir.absolutePath.replace('\\','/');	                 -->
<!-- 		                File jpathDependencyFile = new File(new File(basedir),'target/JsonPath/jpath/build/libs/jpath-1.0.0.jar'); -->
<!-- 		                File dir = new File(new File(basedir),'target/sensinact/load/json-path'); -->
<!-- 		                if(!dir.exists()){ -->
<!-- 		                	dir.mkdirs();		                	 -->
<!-- 		                }		                 -->
<!-- 		                def newFile = new File(dir,'jpath-1.0.0.jar'); -->
<!-- 					    newFile.createNewFile();                              -->
<!--                         output = newFile.newOutputStream();                         -->
<!-- 						jpathDependencyFile.newInputStream().eachByte(1024, {data, lenth -> output.write(data, 0, lenth)}); -->
<!-- 						output.close(); -->
						
<!-- 						File providerDependencyFile = new File(new File(basedir),'target/JsonPath/json-provider-jsonorg/build/libs/json-provider-jsonorg-1.0.0.jar');	                 -->
<!-- 		                newFile = new File(dir,'json-provider-jsonorg-1.0.0.jar'); -->
<!-- 					    newFile.createNewFile();                              -->
<!--                         output = newFile.newOutputStream(); -->
<!-- 						providerDependencyFile.newInputStream().eachByte(1024, {data, lenth -> output.write(data, 0, lenth)}); -->
<!-- 						output.close(); -->
<!-- 	                </source> -->
<!-- 	              </configuration> -->
<!-- 	            </execution> -->
<!-- 	          </executions> -->
<!-- 	        </plugin> -->
	        <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <inherited>false</inherited>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/sensinact/load/${project.artifactId}</outputDirectory>
                            <excludeArtifactIds>${excludeArtifactId}</excludeArtifactIds>
                            <excludeGroupIds>${excludeGroupId}</excludeGroupIds>
                            <excludeTransitive>${excludeTransitive}</excludeTransitive>
                            <excludeTypes>pom</excludeTypes>
                        </configuration>
                        <inherited>false</inherited>
                    </execution>
                </executions>
            </plugin>
    	</plugins>
    </build> 

</project>
